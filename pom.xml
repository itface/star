<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>star</groupId>
  <artifactId>star</artifactId>
  <version>1.0.0</version>
  <packaging>war</packaging>
  <name/>
  <description/>
  <developers>
	<developer>
		<name>itface</name>
		<email>itface@163.com</email>
		<url>http://itface.duapp.com</url>
	</developer>
 </developers>
<properties>
   	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <org.aspectj.version>1.7.3</org.aspectj.version>
    <org.slf4j.version>1.7.5</org.slf4j.version>
    <logback.version>1.0.13</logback.version>
    <junit.version>4.8.2</junit.version>
    <log4j.version>1.2.16</log4j.version>
    <jstl.version>1.2</jstl.version>
    <spring.version>3.2.3.RELEASE</spring.version>
    <hibernate.version>4.2.3.Final</hibernate.version>
    <hibernate-validator.version>4.3.1.Final</hibernate-validator.version>
    <tomcat-jdbc.version>7.0.42</tomcat-jdbc.version>
    <sitemesh.version>2.4.2</sitemesh.version>
    <!-- webservice -->
    <cxf.version>2.7.5</cxf.version>
    <jackson.version>2.1.5</jackson.version>
    <jedis.version>2.1.0</jedis.version>
    <quartz.version>1.8.6</quartz.version>
    <!-- Jolokia 是一个用来访问远程 JMX MBeans 的崭新方法，与 JSR-160 连接器不同的是，它使用基于 HTTP 的 JSON 格式作为通讯协议，提供 JMX 批量操作等。 -->
    <jolokia.version>1.1.2</jolokia.version>
    <activemq.version>5.8.0</activemq.version>
    <httpclient.version>4.2.5</httpclient.version>
    <net.sf.json-lib.version>2.2.2</net.sf.json-lib.version>
    <shiro.version>1.2.2</shiro.version>
    <ehcache.version>2.6.6</ehcache.version>
    <!-- Google Guava Collections（以下都简称为 Guava Collections）是 Java Collections Framework 的增强和扩展 -->
    <guava.version>14.0.1</guava.version>
    <!-- Joda-Time 令时间和日期值变得易于管理、操作和理解 -->
	<joda-time.version>2.2</joda-time.version>
	<!-- ozer是一种JavaBean的映射工具，类似于apache的BeanUtils。但是dozer更强大，它可以灵活的处理复杂类型之间的映射。不但可以进行简单的属性映射、复杂的类型映射、双向映射、递归映射等，并且可以通过XML配置文件进行灵活的配置。  -->
	<dozer.version>5.4.0</dozer.version>
	<freemarker.version>2.3.20</freemarker.version>
	<mockito.version>1.9.5</mockito.version>
	<powermock.version>1.5.1</powermock.version>
	<!-- Selenium进行web的自动化测试 -->
	<selenium.version>2.33.0</selenium.version>
	<jetty.version>7.6.11.v20130520</jetty.version>
    <bonecp.version>0.7.1.RELEASE</bonecp.version>
    <mysql.jdbc.version>5.1.25</mysql.jdbc.version>
    <spring.security.version>3.1.1.RELEASE</spring.security.version>
    <org.codehaus.jackson.version>1.7.4</org.codehaus.jackson.version>
    <p6spy.version>1.3</p6spy.version>
  </properties>
  <dependencies>
    <dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>servlet-api</artifactId>
		<version>2.5</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>taglibs</groupId>
		<artifactId>standard</artifactId>
		<version>1.1.2</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>javax.servlet.jsp</groupId>
		<artifactId>javax.servlet.jsp-api</artifactId>
		<version>2.2.1</version>
		<scope>provided</scope>
	</dependency>
	<!-- commons-fileupload begin -->
	<dependency>
		<groupId>commons-fileupload</groupId>
		<artifactId>commons-fileupload</artifactId>
		<version>1.2.2</version>
	</dependency>
     <!-- commons-fileupload end -->      
	<!-- ckeditor begin-->
	<dependency>
		<groupId>com.ckeditor</groupId>
		<artifactId>ckeditor-java-core</artifactId>
		<version>3.5.3</version>
	</dependency>
	<!-- ckeditor end-->
	<!-- selenium 2.0 begin-->
	<dependency>
		<groupId>org.seleniumhq.selenium</groupId>
		<artifactId>selenium-java</artifactId>
		<version>${selenium.version}</version>
		<scope>test</scope>
		<exclusions>
			<exclusion>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-android-driver</artifactId>
			</exclusion>
			<exclusion>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-iphone-driver</artifactId>
			</exclusion>
			<exclusion>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-htmlunit-driver</artifactId>
			</exclusion>
			<exclusion>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-safari-driver</artifactId>
			</exclusion>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<dependency>
		<groupId>org.seleniumhq.selenium</groupId>
		<artifactId>selenium-remote-driver</artifactId>
		<version>${selenium.version}</version>
		<scope>test</scope>
		<exclusions>
			<exclusion>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
			</exclusion>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<!-- selenium 2.0 end-->
	<!-- template engine begin-->
	<dependency>
		<groupId>org.freemarker</groupId>
		<artifactId>freemarker</artifactId>
		<version>${freemarker.version}</version>
	</dependency>
	<!-- template engine end-->
	<!-- jolokia Restful JMX begin -->
	<dependency>
		<groupId>org.jolokia</groupId>
		<artifactId>jolokia-core</artifactId>
		<version>${jolokia.version}</version>
	</dependency>
	<!-- jolokia end-->
	<!-- NOSQL begin-->
    <dependency>
        <groupId>redis.clients</groupId>
        <artifactId>jedis</artifactId>
        <version>${jedis.version}</version>
    </dependency>
    <!-- NOSQL end-->
    <!-- SOAP begin -->
	<dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-core</artifactId>
		<version>${cxf.version}</version>
		<exclusions>
			<!-- use javax.mail.mail instead -->
			<exclusion>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-javamail_1.4_spec</artifactId>
			</exclusion>
			<!-- use javax.activation.activation instead -->
			<exclusion>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-activation_1.1_spec</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-frontend-jaxws</artifactId>
		<version>${cxf.version}</version>
		<exclusions>
			<!-- see above -->
			<exclusion>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-javamail_1.4_spec</artifactId>
			</exclusion>
			<exclusion>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-activation_1.1_spec</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-transports-http</artifactId>
		<version>${cxf.version}</version>
	</dependency>
	<!-- SOAP end -->
	<!-- JAX-RS begin -->
	<dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-frontend-jaxrs</artifactId>
		<version>${cxf.version}</version>
	</dependency>
	<dependency>
           <groupId>com.fasterxml.jackson.jaxrs</groupId>
           <artifactId>jackson-jaxrs-json-provider</artifactId>
           <version>${jackson.version}</version>
      	</dependency>
	<!-- JAX-RS end -->
	<!-- connection pool begin-->
	<dependency>
		<groupId>org.apache.tomcat</groupId>
		<artifactId>tomcat-jdbc</artifactId>
		<version>${tomcat-jdbc.version}</version>
		<scope>runtime</scope>
	</dependency>
	<!-- connection pool end-->
	<!-- sitemesh begin-->
	<dependency>
		<groupId>opensymphony</groupId>
		<artifactId>sitemesh</artifactId>
		<version>${sitemesh.version}</version>
		<scope>runtime</scope>
	</dependency>
	<!-- sitemesh end-->
	 <!--******************************** spring data jpa begin *******************************************************--> 
      <dependency>
		<groupId>org.springframework.data</groupId>
		<artifactId>spring-data-commons-core</artifactId>
		<version>1.3.2.RELEASE</version>
	  </dependency>
	  <!-- dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
			<version>1.5.1.RELEASE</version>
		</dependency-->
      <dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.3.2.RELEASE</version>
	 </dependency>  
	  <!--******************************** spring data jpa end *******************************************************-->      
	<!--******************************** mysql jdbc begin *******************************************************-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.jdbc.version}</version>
		</dependency>
    <!--******************************** mysql jdbc end *******************************************************-->
	<!--******************************** bonecp数据库连接池 begin *******************************************************-->
	<dependency>
		<groupId>com.jolbox</groupId>
		<artifactId>bonecp</artifactId>
		<version>${bonecp.version}</version>
	</dependency>
	<dependency>
		<groupId>com.jolbox</groupId>
		<artifactId>bonecp-spring</artifactId>
		<version>${bonecp.version}</version>
	</dependency>
     <dependency>
	<groupId>com.jolbox</groupId>
		<artifactId>bonecp-provider</artifactId>
		<version>0.7.1-rc5</version>
	</dependency>
    <!--******************************** bonecp数据库连接池 end *******************************************************-->
	 <!--******************************** ehcache begin *******************************************************-->
	<dependency>
		<groupId>net.sf.ehcache</groupId>
		<artifactId>ehcache-core</artifactId>
		<version>${ehcache.version}</version>
	</dependency>
	<dependency>
		<groupId>net.sf.ehcache</groupId>
		<artifactId>ehcache-web</artifactId>
		<version>2.0.4</version>
	</dependency>       
     <!--******************************** ehcache end *******************************************************-->        
	 <!--******************************** shiro begin *******************************************************-->
   <dependency>
		<groupId>org.apache.shiro</groupId>
		<artifactId>shiro-all</artifactId>
		<version>${shiro.version}</version>
	</dependency>
     <!--******************************** shiro end *******************************************************-->
      <!--******************************** jstl begin *******************************************************-->
   <dependency>
		<groupId>jstl</groupId>
		<artifactId>jstl</artifactId>
		<version>${jstl.version}</version>
	</dependency>
     <!--******************************** jstl end *******************************************************-->
     <!--******************************** quartz begin *******************************************************-->
    <dependency>
		<groupId>org.quartz-scheduler</groupId>
		<artifactId>quartz</artifactId>
		<version>${quartz.version}</version>
	</dependency>
 	 <!--******************************** quartz end *******************************************************-->
 	 <!--******************************** activemq begin *******************************************************-->
 	<dependency>
		<groupId>org.apache.activemq</groupId>
		<artifactId>activemq-all</artifactId>
		<version>${activemq.version}</version>
	</dependency>
    <dependency>
		<groupId>org.apache.activemq</groupId>
		<artifactId>activemq-pool</artifactId>
		<version>${activemq.version}</version>
	</dependency>    
     <!--******************************** activemq end *******************************************************--> 
      <!--******************************** httpclient begin *******************************************************-->
     <dependency> 
     	<groupId>org.apache.httpcomponents</groupId> 
       	<artifactId>httpclient</artifactId> 
      	<version>${httpclient.version}</version>         
     </dependency> 
     <dependency> 
      	<groupId>org.apache.httpcomponents</groupId> 
       	<artifactId>httpclient-cache</artifactId> 
      	<version>${httpclient.version}</version>         
     </dependency> 
     <dependency> 
      	<groupId>org.apache.httpcomponents</groupId> 
       	<artifactId>httpmime</artifactId> 
      	<version>${httpclient.version}</version> 
     </dependency> 
     <dependency>
	<groupId>org.apache.httpcomponents</groupId>
		<artifactId>httpcore</artifactId>
		<version>4.2.4</version>
	</dependency>
    <!--******************************** httpclient end *******************************************************-->        
       <!--******************************** net.sf.json-lib begin *******************************************************-->
    <dependency>
		<groupId>net.sf.ezmorph</groupId>
		<artifactId>ezmorph</artifactId>
		<version>1.0.6</version>
	</dependency>
    <dependency>
		<groupId>net.sf.json-lib</groupId>
		<artifactId>json-lib</artifactId>
		<version>2.2.2</version>
		<classifier>jdk15</classifier>
	</dependency>
        <!--******************************** net.sf.json-lib end *******************************************************-->         
       <!--******************************** spring begin *******************************************************-->
       <dependency>   
		<groupId>org.springframework</groupId>   
		<artifactId>spring-core</artifactId>   
		<version>${spring.version}</version>   
	</dependency>   
	<dependency>   
		<groupId>org.springframework</groupId>   
		<artifactId>spring-context</artifactId>   
		<version>${spring.version}</version>   
	</dependency>   
	<dependency>   
		<groupId>org.springframework</groupId>   
		<artifactId>spring-aop</artifactId>   
		<version>${spring.version}</version>   
	</dependency>  
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-expression</artifactId>
		<version>${spring.version}</version>
	</dependency>  
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-instrument</artifactId>
		<version>${spring.version}</version>
	</dependency> 
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-instrument-tomcat</artifactId>
		<version>${spring.version}</version>
	</dependency>
                      
	<dependency>   
		<groupId>org.springframework</groupId>   
		<artifactId>spring-aspects</artifactId>   
		<version>${spring.version}</version>   
	</dependency>   
	<dependency>   
		<groupId>org.springframework</groupId>   
		<artifactId>spring-beans</artifactId>   
		<version>${spring.version}</version>   
	</dependency>
	<dependency>
		<groupId>org.apache.xbean</groupId>
		<artifactId>xbean-spring</artifactId>
		<version>3.14</version>
	</dependency>   
	<dependency>   
		<groupId>org.springframework</groupId>   
		<artifactId>spring-test</artifactId>   
		<version>${spring.version}</version>   
	</dependency> 
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-tx</artifactId>
		<version>${spring.version}</version>
	</dependency>  
	<dependency>   
		<groupId>org.springframework</groupId>   
		<artifactId>spring-context-support</artifactId>   
		<version>${spring.version}</version>   
	</dependency>   
	<dependency>   
		<groupId>org.springframework</groupId>   
		<artifactId>spring-webmvc</artifactId>   
		<version>${spring.version}</version>   
	</dependency>   
	<dependency>   
		<groupId>org.springframework</groupId>   
		<artifactId>spring-web</artifactId>   
		<version>${spring.version}</version>   
	</dependency>   
	<dependency>   
		<groupId>org.springframework</groupId>   
		<artifactId>spring-orm</artifactId>   
		<version>${spring.version}</version>   
	</dependency> 
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jms</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-oxm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc-portlet</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- AOP begin-->
	<dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjrt</artifactId>
		<version>${org.aspectj.version}</version>
	</dependency>
	<dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjweaver</artifactId>
		<version>${org.aspectj.version}</version>
		<scope>runtime</scope>
	</dependency>
  	<!-- AOP end -->
  <!--******************************** spring end *******************************************************-->
  <!--******************************** spring MappingJacksonHttpMessageConverter 要使用到的jar包 *******************************************************-->
  <dependency>
       <groupId>org.codehaus.jackson</groupId>
       <artifactId>jackson-core-asl</artifactId>
       <version>${org.codehaus.jackson.version}</version>
   </dependency>
   <dependency>
       <groupId>org.codehaus.jackson</groupId>
       <artifactId>jackson-core-lgpl</artifactId>
       <version>${org.codehaus.jackson.version}</version>
   </dependency>
   <dependency>
       <groupId>org.codehaus.jackson</groupId>
       <artifactId>jackson-mapper-asl</artifactId>
       <version>${org.codehaus.jackson.version}</version>
   </dependency>
   <dependency>
       <groupId>org.codehaus.jackson</groupId>
       <artifactId>jackson-mapper-lgpl</artifactId>
       <version>${org.codehaus.jackson.version}</version>
   </dependency>
  <!--******************************** spring MappingJacksonHttpMessageConverter 要使用到的jar包 *******************************************************-->
	<!-- spring的logback扩展包 -->  
	<dependency>
		<groupId>org.logback-extensions</groupId>
		<artifactId>logback-ext-spring</artifactId>
		<version>0.1.1</version>
	</dependency>
	<dependency>
		<groupId>org.logback-extensions</groupId>
		<artifactId>logback-ext-loggly</artifactId>
		<version>0.1.1</version>
	</dependency>
   <!-- spring的logback扩展包 -->  
   <!--******************************** slf4j begin *******************************************************-->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>${org.slf4j.version}</version>
	</dependency>
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
		<version>${org.slf4j.version}</version>
	</dependency>
	<!-- 代码直接调用log4j会被桥接到slf4j -->
	<!--dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>log4j-over-slf4j</artifactId>
		<version>${org.slf4j.version}</version>
		<scope>runtime</scope>
	</dependency-->
	<!-- 代码直接调用common-logging会被桥接到slf4j -->
	<!--dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>jcl-over-slf4j</artifactId>
		<version>${org.slf4j.version}</version>
		<scope>runtime</scope>
	</dependency-->
	
	<!-- 代码直接调用java.util.logging会被桥接到slf4j -->
	<!--dependency>
 		<groupId>org.slf4j</groupId>
 		<artifactId>jul-to-slf4j</artifactId>
 		<version>${org.slf4j.version}</version>
 		<scope>runtime</scope>
	</dependency-->
	<!-- log4jdbc -->
	<!-- dependency>
		<groupId>org.bgee.log4jdbc-log4j2</groupId>
		<artifactId>log4jdbc-log4j2-jdbc4</artifactId>
		<version>1.15</version>
	</dependency>
	<dependency>
		<groupId>org.bgee.log4jdbc-log4j2</groupId>
		<artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
		<version>1.15</version>
	</dependency--> 
	<!-- log4jdbc4-1.2.jar添加到本地库：D:\>mvn install:install-file -Dfile=log4jdbc4-1.2.jar -DgroupId=net.sf.log4jdbc
-DartifactId=log4jdbc4 -Dversion=1.2 -Dpackaging=jar -->       
	<!--******************************** slf4j end *******************************************************-->
	<!-- logback begin-->
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
		<version>${logback.version}</version>
	</dependency>
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-core</artifactId>
		<version>${logback.version}</version>
	</dependency>
    <dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-access</artifactId>
		<version>${logback.version}</version>
	</dependency>                   
	<!-- logback end-->
	 <!--******************************** log4j begin *******************************************************-->
	<dependency>
		<groupId>log4j</groupId>
		<artifactId>log4j</artifactId>
		<version>${log4j.version}</version>
	</dependency>
	 <!--******************************** log4j end *******************************************************-->
	 <!--******************************** log4j扩展包，生成的日志文件带时间戳begin*******************************************************-->
	 <dependency>
		<groupId>log4j</groupId>
		<artifactId>apache-log4j-extras</artifactId>
		<version>1.1</version>
	 </dependency>   
	 <!--******************************** log4j扩展包，生成的日志文件带时间戳end *******************************************************-->
	 <!--******************************** junit begin *******************************************************-->
	 <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
     </dependency>
	 <!--******************************** junit end *******************************************************-->
	 <!-- mockito begin-->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.mockito</groupId>
						<artifactId>mockito-all</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
	<!-- mockito end-->		
	 <!--******************************** hibernate begin *******************************************************-->
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-core</artifactId>
		<version>${hibernate.version}</version>
	</dependency>
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-entitymanager</artifactId>
		<version>${hibernate.version}</version>
	</dependency>
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-ehcache</artifactId>
		<version>${hibernate.version}</version>
	</dependency>
    <!--dependency>
       <groupId>org.hibernate.common</groupId>
       <artifactId>hibernate-commons-annotations</artifactId>
       <version>4.0.2.Final</version>
    </dependency-->
    <dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-validator</artifactId>
		<version>${hibernate-validator.version}</version>
	</dependency>
	<!--******************************** hibernate end *******************************************************-->
	<!--******************************** Jakarta Commons相关工具包 begin *******************************************************-->
	<dependency>
		<groupId>commons-codec</groupId>
		<artifactId>commons-codec</artifactId>
		<version>1.4</version>
	</dependency>
	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
		<version>2.1</version>
	</dependency>
	<dependency>
		<groupId>commons-beanutils</groupId>
		<artifactId>commons-beanutils</artifactId>
		<version>1.8.3</version>
	</dependency>
	<dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<version>1.1.1</version>
	</dependency>
	<dependency>
		<groupId>commons-collections</groupId>
		<artifactId>commons-collections</artifactId>
		<version>3.2</version>
	</dependency>
	<dependency>
		<groupId>commons-lang</groupId>
		<artifactId>commons-lang</artifactId>
		<version>2.6</version>
	</dependency>
	
	<!--******************************** Jakarta Commons相关工具包 end *******************************************************-->
	<!--******************************** p6spy begin *******************************************************-->
	<dependency>
		<groupId>p6spy</groupId>
		<artifactId>p6spy</artifactId>
		<version>${p6spy.version}</version>
	</dependency>
    <!--******************************** p6spy end *******************************************************-->        
  	<!-- pojo copy begin-->
	<dependency>
		<groupId>net.sf.dozer</groupId>
		<artifactId>dozer</artifactId>
		<version>${dozer.version}</version>
	</dependency>
	<!-- pojo copy end-->
	<!-- google java library begin-->
	<dependency>
		<groupId>com.google.guava</groupId>
		<artifactId>guava</artifactId>
		<version>${guava.version}</version>
	</dependency>  
	<!-- google java library end--> 
  </dependencies>
  <build>
    <resources>
      <resource>
        <directory>src/teset/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>  
          <!-- 处理资源文件 -->
          <groupId>org.apache.maven.plugins</groupId>  
          <artifactId>maven-resources-plugin</artifactId>  
          <configuration>  
              <encoding>UTF-8</encoding>  
          </configuration>  
      </plugin>  
      <plugin>  
          <!-- 编译插件 -->
          <groupId>org.apache.maven.plugins</groupId>  
          <artifactId>maven-compiler-plugin</artifactId> 
          <configuration>  
              <encoding>UTF-8</encoding>  
              <source>1.6</source>
          	  <target>1.6</target>
          </configuration>  
      </plugin>  
      <!-- war打包插件, 设定war包名称不带版本号 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<configuration>
				<warName>${project.artifactId}</warName>
				<warSourceExcludes>src/test/java/**</warSourceExcludes>
			</configuration>
		</plugin>
		<!-- dependency插件 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-dependency-plugin</artifactId>
		</plugin>
		<!-- resource插件 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-resources-plugin</artifactId>
		</plugin>
		
		<!-- install插件 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-install-plugin</artifactId>
		</plugin>

		<!-- clean插件 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-clean-plugin</artifactId>
		</plugin>
		<!-- ant插件 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-antrun-plugin</artifactId>
		</plugin>
		<!-- cobertura插件, 设置不需要计算覆盖率的类 -->
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>cobertura-maven-plugin</artifactId>
			<!-- configuration>
				<instrumentation>
					<excludes>
						<exclude>**/entity/**/*.class</exclude>
						<exclude>**/*Controller.class</exclude>
					</excludes>
				</instrumentation>
            </configuration-->
		</plugin>
		<!-- test插件, 仅测试名称为*Test的类,使用支持分组测试的surefire-junit47 driver -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<configuration>
				<skip>true</skip> 
			</configuration>
			<dependencies>
				<dependency>
					<groupId>org.apache.maven.surefire</groupId>
					<artifactId>surefire-junit47</artifactId>
				</dependency>
			</dependencies>
		</plugin>
		<!-- 增加functional test的Source目录 -->
		<!-- plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>build-helper-maven-plugin</artifactId>
			<version>1.8</version>
			<executions>
				<execution>
					<id>add-functional-source</id>
					<phase>generate-sources</phase>
					<goals>
						<goal>add-test-source</goal>
					</goals>
					<configuration>
						<sources>
							<source>src/test/functional</source>
						</sources>
					</configuration>
				</execution>
			</executions>
		</plugin-->
    </plugins>
  </build>
</project>